# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run.
on:
    # Triggers the workflow on push or pull request events but only for the main branch
    push:
        branches: [main]
    pull_request:
        branches: [main]
    schedule:
        - cron: "00 * * * *"

    # Allows you to run this workflow manually from the Actions tab
    workflow_dispatch:
        inputs:
            date:
                description: "date"
                required: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
    check-stock:
        runs-on: ubuntu-latest
        steps:
            # - uses: actions/checkout@v2
            - name: Use Node.js
              id: check-stock
              #   uses: actions/setup-node@v1
              #   with:
              #       node-version: "12.x"
              # - run: npm ci
              # - run: npm run cy:test
              run: exit 1
            - name: Notify Slack on failure
              if: failure() && steps.check-stock.outcome == 'failure'
              run: |
                  DATA=$(cat <<EOF
                    在庫切れだよ(;ω;)
                  EOF
                  )
                  curl -X POST \
                        "https://slack.com/api/chat.postMessage" \
                        -d "token=${{ secrets.SLACK_BOT_TOKEN }}" \
                        -d "channel=${{ secrets.TARGET_CHANNEL }}" \
                        -d "text=$DATA"
            - name: Notify Slack on success
              if: success() && steps.check-stock.outcome == 'success'
              run: |
                  DATA=$(cat <<EOF
                    PCが購入できる状態になったよ！ -> https://jp.store.asus.com/store/asusjp/ja_JP/pd/productID.5483222700/
                  EOF
                  )
                  curl -X POST \
                        "https://slack.com/api/chat.postMessage" \
                        -d "token=${{ secrets.SLACK_BOT_TOKEN }}" \
                        -d "channel=${{ secrets.TARGET_CHANNEL }}" \
                        -d "text=$DATA"
    # slack-notification:
    #     # The type of runner that the job will run on
    #     runs-on: ubuntu-latest
    #     # Steps represent a sequence of tasks that will be executed as part of the job
    #     steps:
    #         - name: Notify Slack
    #           if: steps.cypress-test.outcome == 'failure'
    #           run: |
    #               data=$(cat <<EOF
    #               {
    #                 "channel": "xx_pc_stock_notification",
    #                 "username": "github-actions",
    #                 "text": "PCが購入できる状態になったよ！ -> https://jp.store.asus.com/store/asusjp/ja_JP/pd/productID.5483222700/"
    #               }
    #               EOF
    #               )
    #               curl -X POST \
    #                     -H "Content-type: application/json; charset=utf-8" \
    #                     -H "Authorization: Bearer ${{ secrets.SLACK_BOT_TOKEN }}" \
    #                     -d "$data" \
    #                     https://slack.com/api/chat.postMessage
    print_date:
        runs-on: ubuntu-latest
        steps:
            - name: input date
              run: |
                  input_date=${{ github.event.inputs.date }}
                  if [[ -z "$input_date" ]]; then
                    start_date=$(date "+%Y/%m/%d %T")
                  else
                    start_date=$(echo $input_date)
                  fi

                  echo $start_date
